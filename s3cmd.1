
.TH s3cmd 1
.SH NAME
s3cmd \- tool for managing Amazon S3 storage space and Amazon CloudFront content delivery network
.SH SYNOPSIS
.B s3cmd
[\fIOPTIONS\fR] \fICOMMAND\fR [\fIPARAMETERS\fR]
.SH DESCRIPTION
.PP
.B s3cmd
is a command line client for copying files to/from 
Amazon S3 (Simple Storage Service) and performing other
related tasks, for instance creating and removing buckets,
listing objects, etc.

.SH COMMANDS
.PP
.B s3cmd
can do several \fIactions\fR specified by the following \fIcommands\fR.
.TP
s3cmd \fBmb\fR \fIs3://BUCKET\fR
Make bucket
.TP
s3cmd \fBrb\fR \fIs3://BUCKET\fR
Remove bucket
.TP
s3cmd \fBls\fR \fI[s3://BUCKET[/PREFIX]]\fR
List objects or buckets
.TP
s3cmd \fBla\fR \fI\fR
List all object in all buckets
.TP
s3cmd \fBput\fR \fIFILE [FILE...] s3://BUCKET[/PREFIX]\fR
Put file into bucket
.TP
s3cmd \fBget\fR \fIs3://BUCKET/OBJECT LOCAL_FILE\fR
Get file from bucket
.TP
s3cmd \fBdel\fR \fIs3://BUCKET/OBJECT\fR
Delete file from bucket
.TP
s3cmd \fBsync\fR \fILOCAL_DIR s3://BUCKET[/PREFIX] or s3://BUCKET[/PREFIX] LOCAL_DIR\fR
Synchronize a directory tree to S3
.TP
s3cmd \fBdu\fR \fI[s3://BUCKET[/PREFIX]]\fR
Disk usage by buckets
.TP
s3cmd \fBinfo\fR \fIs3://BUCKET[/OBJECT]\fR
Get various information about Buckets or Files
.TP
s3cmd \fBcp\fR \fIs3://BUCKET1/OBJECT1 s3://BUCKET2[/OBJECT2]\fR
Copy object
.TP
s3cmd \fBmv\fR \fIs3://BUCKET1/OBJECT1 s3://BUCKET2[/OBJECT2]\fR
Move object
.TP
s3cmd \fBsetacl\fR \fIs3://BUCKET[/OBJECT]\fR
Modify Access control list for Bucket or Files
.TP
s3cmd \fBsetpolicy\fR \fIs3://BUCKET POLICY_STRING\fR
Set an access policy for a bucket
.TP
s3cmd \fBaccesslog\fR \fIs3://BUCKET\fR
Enable/disable bucket access logging
.TP
s3cmd \fBsign\fR \fISTRING-TO-SIGN\fR
Sign arbitrary string using the secret key
.TP
s3cmd \fBsignurl\fR \fIs3://BUCKET/OBJECT expiry_epoch\fR
Sign an S3 URL to provide limited public access with expiry
.TP
s3cmd \fBfixbucket\fR \fIs3://BUCKET[/PREFIX]\fR
Fix invalid file names in a bucket


.PP
Commands for static WebSites configuration
.TP
s3cmd \fBws-create\fR \fIs3://BUCKET\fR
Create Website from bucket
.TP
s3cmd \fBws-delete\fR \fIs3://BUCKET\fR
Delete Website
.TP
s3cmd \fBws-info\fR \fIs3://BUCKET\fR
Info about Website


.PP
Commands for CloudFront management
.TP
s3cmd \fBcflist\fR \fI\fR
List CloudFront distribution points
.TP
s3cmd \fBcfinfo\fR \fI[cf://DIST_ID]\fR
Display CloudFront distribution point parameters
.TP
s3cmd \fBcfcreate\fR \fIs3://BUCKET\fR
Create CloudFront distribution point
.TP
s3cmd \fBcfdelete\fR \fIcf://DIST_ID\fR
Delete CloudFront distribution point
.TP
s3cmd \fBcfmodify\fR \fIcf://DIST_ID\fR
Change CloudFront distribution point parameters
.TP
s3cmd \fBcfinvalinfo\fR \fIcf://DIST_ID[/INVAL_ID]\fR
Display CloudFront invalidation request(s) status


.SH OPTIONS
.PP
Some of the below specified options can have their default 
values set in 
.B s3cmd
config file (by default $HOME/.s3cmd). As it's a simple text file 
feel free to open it with your favorite text editor and do any
changes you like. 
.TP
\fB\-h\fR, \fB\-\-help\fR
show this help message and exit
.TP
\fB\-\-configure\fR
Invoke interactive (re)configuration tool. Optionally use as '--configure s3://come-bucket' to test access to a specific bucket instead of attempting to list them all.
.TP
\fB\-c\fR FILE, \fB\-\-config\fR=FILE
Config file name. Defaults to /home/mludvig/.s3cfg
.TP
\fB\-\-dump\-config\fR
Dump current configuration after parsing config files and command line options and exit.
.TP
\fB\-\-access_key\fR=ACCESS_KEY
AWS Access Key
.TP
\fB\-\-secret_key\fR=SECRET_KEY
AWS Secret Key
.TP
\fB\-n\fR, \fB\-\-dry\-run\fR
Only show what should be uploaded or downloaded but don't actually do it. May still perform S3 requests to get bucket listings and other information though (only for file transfer commands)
.TP
\fB\-e\fR, \fB\-\-encrypt\fR
Encrypt files before uploading to S3.
.TP
\fB\-\-no\-encrypt\fR
Don't encrypt files.
.TP
\fB\-f\fR, \fB\-\-force\fR
Force overwrite and other dangerous operations.
.TP
\fB\-\-continue\fR
Continue getting a partially downloaded file (only for [get] command).
.TP
\fB\-\-skip\-existing\fR
Skip over files that exist at the destination (only for [get] and [sync] commands).
.TP
\fB\-r\fR, \fB\-\-recursive\fR
Recursive upload, download or removal.
.TP
\fB\-\-check\-md5\fR
Check MD5 sums when comparing files for [sync]. (default)
.TP
\fB\-\-no\-check\-md5\fR
Do not check MD5 sums when comparing files for [sync]. Only size will be compared. May significantly speed up transfer but may also miss some changed files.
.TP
\fB\-P\fR, \fB\-\-acl\-public\fR
Store objects with ACL allowing read for anyone.
.TP
\fB\-\-acl\-private\fR
Store objects with default ACL allowing access for you only.
.TP
\fB\-\-acl\-grant\fR=PERMISSION:EMAIL or USER_CANONICAL_ID
Grant stated permission to a given amazon user. Permission is one of: read, write, read_acp, write_acp, full_control, all
.TP
\fB\-\-acl\-revoke\fR=PERMISSION:USER_CANONICAL_ID
Revoke stated permission for a given amazon user. Permission is one of: read, write, read_acp, wr     ite_acp, full_control, all
.TP
\fB\-\-delete\-removed\fR
Delete remote objects with no corresponding local file [sync]
.TP
\fB\-\-no\-delete\-removed\fR
Don't delete remote objects.
.TP
\fB\-\-delete\-after\fR
Perform deletes after new uploads [sync]
.TP
\fB\-\-delay\-updates\fR
Put all updated files into place at end [sync]
.TP
\fB\-\-add\-destination\fR=ADDITIONAL_DESTINATIONS
Additional destination for parallel uploads, in addition to last arg.  May be repeated.
.TP
\fB\-\-delete\-after\-fetch\fR
Delete remote objects after fetching to local file (only for [get] and [sync] commands).
.TP
\fB\-p\fR, \fB\-\-preserve\fR
Preserve filesystem attributes (mode, ownership, timestamps). Default for [sync] command.
.TP
\fB\-\-no\-preserve\fR
Don't store FS attributes
.TP
\fB\-\-exclude\fR=GLOB
Filenames and paths matching GLOB will be excluded from sync
.TP
\fB\-\-exclude\-from\fR=FILE
Read --exclude GLOBs from FILE
.TP
\fB\-\-rexclude\fR=REGEXP
Filenames and paths matching REGEXP (regular expression) will be excluded from sync
.TP
\fB\-\-rexclude\-from\fR=FILE
Read --rexclude REGEXPs from FILE
.TP
\fB\-\-include\fR=GLOB
Filenames and paths matching GLOB will be included even if previously excluded by one of --(r)exclude(-from) patterns
.TP
\fB\-\-include\-from\fR=FILE
Read --include GLOBs from FILE
.TP
\fB\-\-rinclude\fR=REGEXP
Same as --include but uses REGEXP (regular expression) instead of GLOB
.TP
\fB\-\-rinclude\-from\fR=FILE
Read --rinclude REGEXPs from FILE
.TP
\fB\-\-bucket\-location\fR=BUCKET_LOCATION
Datacentre to create bucket in. As of now the datacenters are: US (default), EU, ap-northeast-1, ap-southeast-1, sa-east-1, us-west-1 and us-west-2
.TP
\fB\-\-reduced\-redundancy\fR, \fB\-\-rr\fR
Store object with 'Reduced redundancy'. Lower per-GB price. [put, cp, mv]
.TP
\fB\-\-access\-logging\-target\-prefix\fR=LOG_TARGET_PREFIX
Target prefix for access logs (S3 URI) (for [cfmodify] and [accesslog] commands)
.TP
\fB\-\-no\-access\-logging\fR
Disable access logging (for [cfmodify] and [accesslog] commands)
.TP
\fB\-\-default\-mime\-type\fR
Default MIME-type for stored objects. Application default is binary/octet-stream.
.TP
\fB\-M\fR, \fB\-\-guess\-mime\-type\fR
Guess MIME-type of files by their extension or mime magic. Fall back to default MIME-Type as specified by \fB--default-mime-type\fR option
.TP
\fB\-\-no\-guess\-mime\-type\fR
Don't guess MIME-type and use the default type instead.
.TP
\fB\-m\fR MIME/TYPE, \fB\-\-mime\-type\fR=MIME/TYPE
Force MIME-type. Override both \fB--default-mime-type\fR and \fB--guess-mime-type\fR.
.TP
\fB\-\-add\-header\fR=NAME:VALUE
Add a given HTTP header to the upload request. Can be used multiple times. For instance set 'Expires' or 'Cache-Control' headers (or both) using this options if you like.
.TP
\fB\-\-encoding\fR=ENCODING
Override autodetected terminal and filesystem encoding (character set). Autodetected: UTF-8
.TP
\fB\-\-add\-encoding\-exts\fR=EXTENSIONs
Add encoding to these comma delimited extensions i.e. (css,js,html) when uploading to S3 )
.TP
\fB\-\-verbatim\fR
Use the S3 name as given on the command line. No pre-processing, encoding, etc. Use with caution!
.TP
\fB\-\-disable\-multipart\fR
Disable multipart upload on files bigger than --multipart-chunk-size-mb
.TP
\fB\-\-multipart\-chunk\-size\-mb\fR=SIZE
Size of each chunk of a multipart upload. Files bigger than SIZE are automatically uploaded as multithreaded-multipart, smaller files are uploaded using the traditional method. SIZE is in Mega-Bytes,
default chunk size is noneMB, minimum allowed chunk size is 5MB, maximum is 5GB.
.TP
\fB\-\-list\-md5\fR
Include MD5 sums in bucket listings (only for 'ls' command).
.TP
\fB\-H\fR, \fB\-\-human\-readable\-sizes\fR
Print sizes in human readable form (eg 1kB instead of 1234).
.TP
\fB\-\-ws\-index\fR=WEBSITE_INDEX
Name of error-document (only for [ws-create] command)
.TP
\fB\-\-ws\-error\fR=WEBSITE_ERROR
Name of index-document (only for [ws-create] command)
.TP
\fB\-\-progress\fR
Display progress meter (default on TTY).
.TP
\fB\-\-no\-progress\fR
Don't display progress meter (default on non-TTY).
.TP
\fB\-\-enable\fR
Enable given CloudFront distribution (only for [cfmodify] command)
.TP
\fB\-\-disable\fR
Enable given CloudFront distribution (only for [cfmodify] command)
.TP
\fB\-\-cf\-invalidate\fR
Invalidate the uploaded filed in CloudFront. Also see [cfinval] command.
.TP
\fB\-\-cf\-invalidate\-default\-index\fR
When using Custom Origin and S3 static website, invalidate the default index file.
.TP
\fB\-\-cf\-no\-invalidate\-default\-index\-root\fR
When using Custom Origin and S3 static website, don't invalidate the path to the default index file.
.TP
\fB\-\-cf\-add\-cname\fR=CNAME
Add given CNAME to a CloudFront distribution (only for [cfcreate] and [cfmodify] commands)
.TP
\fB\-\-cf\-remove\-cname\fR=CNAME
Remove given CNAME from a CloudFront distribution (only for [cfmodify] command)
.TP
\fB\-\-cf\-comment\fR=COMMENT
Set COMMENT for a given CloudFront distribution (only for [cfcreate] and [cfmodify] commands)
.TP
\fB\-\-cf\-default\-root\-object\fR=DEFAULT_ROOT_OBJECT
Set the default root object to return when no object is specified in the URL. Use a relative path, i.e. default/index.html instead of /default/index.html or s3://bucket/default/index.html (only for
[cfcreate] and [cfmodify] commands)
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Enable verbose output.
.TP
\fB\-d\fR, \fB\-\-debug\fR
Enable debug output.
.TP
\fB\-\-version\fR
Show s3cmd version (1.5.0-alpha1) and exit.
.TP
\fB\-F\fR, \fB\-\-follow\-symlinks\fR
Follow symbolic links as if they are regular files
.TP
\fB\-\-cache\-file\fR=FILE
Cache FILE containing local source MD5 values


.SH EXAMPLES
One of the most powerful commands of \fIs3cmd\fR is \fBs3cmd sync\fR used for 
synchronising complete directory trees to or from remote S3 storage. To some extent 
\fBs3cmd put\fR and \fBs3cmd get\fR share a similar behaviour with \fBsync\fR.
.PP
Basic usage common in backup scenarios is as simple as:
.nf
	s3cmd sync /local/path/ s3://test-bucket/backup/
.fi
.PP
This command will find all files under /local/path directory and copy them 
to corresponding paths under s3://test-bucket/backup on the remote side.
For example:
.nf
	/local/path/\fBfile1.ext\fR         \->  s3://bucket/backup/\fBfile1.ext\fR
	/local/path/\fBdir123/file2.bin\fR  \->  s3://bucket/backup/\fBdir123/file2.bin\fR
.fi
.PP
However if the local path doesn't end with a slash the last directory's name
is used on the remote side as well. Compare these with the previous example:
.nf
	s3cmd sync /local/path s3://test-bucket/backup/
.fi
will sync:
.nf
	/local/\fBpath/file1.ext\fR         \->  s3://bucket/backup/\fBpath/file1.ext\fR
	/local/\fBpath/dir123/file2.bin\fR  \->  s3://bucket/backup/\fBpath/dir123/file2.bin\fR
.fi
.PP
To retrieve the files back from S3 use inverted syntax:
.nf
	s3cmd sync s3://test-bucket/backup/ /tmp/restore/
.fi
that will download files:
.nf
	s3://bucket/backup/\fBfile1.ext\fR         \->  /tmp/restore/\fBfile1.ext\fR       
	s3://bucket/backup/\fBdir123/file2.bin\fR  \->  /tmp/restore/\fBdir123/file2.bin\fR
.fi
.PP
Without the trailing slash on source the behaviour is similar to 
what has been demonstrated with upload:
.nf
	s3cmd sync s3://test-bucket/backup /tmp/restore/
.fi
will download the files as:
.nf
	s3://bucket/\fBbackup/file1.ext\fR         \->  /tmp/restore/\fBbackup/file1.ext\fR       
	s3://bucket/\fBbackup/dir123/file2.bin\fR  \->  /tmp/restore/\fBbackup/dir123/file2.bin\fR
.fi
.PP
All source file names, the bold ones above, are matched against \fBexclude\fR 
rules and those that match are then re\-checked against \fBinclude\fR rules to see
whether they should be excluded or kept in the source list.
.PP
For the purpose of \fB\-\-exclude\fR and \fB\-\-include\fR matching only the 
bold file names above are used. For instance only \fBpath/file1.ext\fR is tested
against the patterns, not \fI/local/\fBpath/file1.ext\fR
.PP
Both \fB\-\-exclude\fR and \fB\-\-include\fR work with shell-style wildcards (a.k.a. GLOB).
For a greater flexibility s3cmd provides Regular-expression versions of the two exclude options 
named \fB\-\-rexclude\fR and \fB\-\-rinclude\fR. 
The options with ...\fB\-from\fR suffix (eg \-\-rinclude\-from) expect a filename as
an argument. Each line of such a file is treated as one pattern.
.PP
There is only one set of patterns built from all \fB\-\-(r)exclude(\-from)\fR options
and similarly for include variant. Any file excluded with eg \-\-exclude can 
be put back with a pattern found in \-\-rinclude\-from list.
.PP
Run s3cmd with \fB\-\-dry\-run\fR to verify that your rules work as expected. 
Use together with \fB\-\-debug\fR get detailed information
about matching file names against exclude and include rules.
.PP
For example to exclude all files with ".jpg" extension except those beginning with a number use:
.PP
	\-\-exclude '*.jpg' \-\-rinclude '[0-9].*\.jpg'
.SH SEE ALSO
For the most up to date list of options run 
.B s3cmd \-\-help
.br
For more info about usage, examples and other related info visit project homepage at
.br
.B http://s3tools.org
.SH DONATIONS
Please consider a donation if you have found s3cmd useful:
.br
.B http://s3tools.org/donate
.SH AUTHOR
Written by Michal Ludvig <mludvig@logix.net.nz> and 15+ contributors
.SH CONTACT, SUPPORT
Prefered way to get support is our mailing list:
.I s3tools\-general@lists.sourceforge.net
.SH REPORTING BUGS
Report bugs to 
.I s3tools\-bugs@lists.sourceforge.net
.SH COPYRIGHT
Copyright \(co 2007,2008,2009,2010,2011,2012 Michal Ludvig <http://www.logix.cz/michal>
.br
This is free software.  You may redistribute copies of it under the terms of
the GNU General Public License version 2 <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.
